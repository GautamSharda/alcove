; This file is here for configuration of rsync parameters and things
;   having to do with the  backup process. For process configuration 
;   go to the config/config directory.
; NOTE: All file paths must either be absolute or relative
;     : to the application root directory, not relative to this file
;     : location. 


; ENVIRONMENT VARIABLES
[environment]
;ip='0.0.0.0'
; Port to run the http application on.
;port=3000

; Run securely or not, defaults to false and doesn't require ssl key and cert.  If true
;     the application will run using https and ssl.
; run_securely = false

; Port to run https application.  Defaults to none and doesn't run securely.
;ssl_port='8080'

; Location of the ssl key if running in secure mode.
;ssl_key='etc/ssl/ssl.key'

; Location of the ssl cert if running in secure mode.
;ssl_cert='etc/ssl/ssl.crt'

; File storing username and encrypted passwords
;auth='resources/htpassword'

; URL of the database to use.
;db_url='sqlite://localhost/backup-development'

; Storage location of the database.
;db_storage='data/development'

; Storage location of the log files.
;log_directory='var/log/backup-system'


; RSYNC VARIABLES
[rsync]
; Place to store the backups on the machine that the files are being copied to.
;destination_dir = '/home/backup'

; Maximum amount of backups allowed to run at the same time
;max_backups = 6

; ssh key location to use to connect to the remote machines (Optional)
;ssh_key = 'path/to/ssh'

; User to connect to the remote machines. Defaults to root.
;user = 'root'


; RSYNC RETRY VARIABLES
[rsync.retry]
;   The program will retry the backup attempt if rsync fails to run successfully for whatever reason.
;   The following variables are here for a user to determine how often it tries to backup before giving up.  If it is one,
;   it will try once whether it is successful or not.  It retries in a time that is exponential.  If the first time is set
;   to retry in 3 minutes the next retry will be 9 minutes and then the next retry will be 27 minutes after that attempt.

; Maximum attempts that a machine tries to backup before giving up if there is an error.
;max_attempts=4

; Multiplier for the time until the next retry attempt. Multiplies the last retry time with this number to come
;     up with the time until a retry is made.
;multiplier = 3

; Time (in minutes) to wait for the first retry attempt ater rsync completes unsucessfully for a particular machine.
;    Can tenths and hundreths of minutes as well (eg. 2.5 or 3.75).
;time = 3

; NOTIFICATIONS VARIABLES
;   these are variables having to do with sending email and sms notifications.
[notifications]
; Boolean to  receive  notifications via email.  Email designated email addresses if an error occurs
;    and summary of backups at every scheduled summary email.
;receive_email_notifications = true

; The email address that the email is sent from if there is an error.
;from_email_addr='info@bioneos.com'

; Email to be notified if there is an error in the backup process.  Name as many as you wish.
;receiving_email_addr[]='user@bioneos.com'
;receiving_email_addr[]='user2@bioneoes.com'

; SMS location notified if there is an error in the backup process.
;    Add in as many as you need.
;receiving_sms_addr[]='mobile-phone#@vtext.com'
;receiving_sms_addr[]='mobile-phone#@txt.att.net'

; Schedule for summary backups to be sent out.  Defaults to every Monday at 8:00am.
;     comma separated days if you wish more than one. ex 1,3,5;13:30 = mon, wed, friday at 1:30pm
;summary_email_sched: '1;8:00'

; SMTP Email options.
[notifications.smtp]
; Host email smtp server that the emails are sent through.
;host='smtp.gmail.com'

; Port that the email server listens on.
;port=25

; Send the emails securly.
;secure=false

; Authentication user of the email server
;auth_user='example@gmail.com'

; Authentication password for the email server user.
;auth_pass='password1234'

; Pooled connections (defaults to false), otherwise creates a new connection for every e-mail.
;pool=false
; Will maybe need to add others to fit more people's needs all arguments come from nodemailer npm module.
